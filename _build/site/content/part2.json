{"kind":"Notebook","sha256":"e588ab1d5572eb6009a7c12af13e49bd32f796333506228549487a1ec1f6c7c7","slug":"part2","location":"/certificates-of-freedom/part2.ipynb","dependencies":[],"frontmatter":{"title":"Certificates of Freedom — Data Analysis Part 2","reviewers":["contributors-part2-generated-uid-1"],"authors":[{"nameParsed":{"literal":"Rajesh Kumar GNANASEKARAN","given":"Rajesh Kumar","family":"GNANASEKARAN"},"name":"Rajesh Kumar GNANASEKARAN","id":"contributors-part2-generated-uid-0"}],"contributors":[{"nameParsed":{"literal":"Richard Marciano","given":"Richard","family":"Marciano"},"name":"Richard Marciano","id":"contributors-part2-generated-uid-1"}],"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"thumbnail":"/Height_Enslaved_Mani-860437ee102343beea087fc1aeec5e74.png","exports":[{"format":"ipynb","filename":"part2.ipynb","url":"/part2-ff3d4f18ccd540c486de12154153fca2.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Certificates Of Freedom — Data Analysis Part 2","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aBFPxN2VHi"}],"identifier":"certificates-of-freedom-data-analysis-part-2","label":"Certificates Of Freedom — Data Analysis Part 2","html_id":"certificates-of-freedom-data-analysis-part-2","implicit":true,"key":"JGhSuDJU0n"}],"key":"fmsadiQ7aQ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Height Feature","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OUpg9064gT"}],"identifier":"height-feature","label":"Height Feature","html_id":"height-feature","implicit":true,"key":"ugmCQp0trQ"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"This field is to indicate the height of the individual freed in feet and inches.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vTcD6hjYGW"}],"key":"TACGfMzGkC"}],"key":"utdO9TKzVh"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# import libraries used for data frame (table-like) operations, and numeric data structure operations\nimport pandas as pd\nimport numpy as np","key":"Tw7YxmmYL8"},{"type":"output","id":"v9nxNnSZNl0XrjLe2koQF","data":[],"key":"Ix8aP651so"}],"key":"c5tXTbDnF1"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#code to import the csv saved from the previous step\ndf = pd.read_csv(\"https://raw.githubusercontent.com/cases-umd/Legacy-of-Slavery/refs/heads/master/Datasets/LoS_Clean_Output_Mod1.csv\") ","key":"diQMkbkcZO"},{"type":"output","id":"eMmySXWugZH9bTI6vx-ch","data":[],"key":"lAXIUBCVp1"}],"key":"Td86RcAeI3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#code to pull the error above\ndf[\"Height\"]","key":"gudBpSkYKk"},{"type":"output","id":"Ckpg3Vq70hYJJxSUH7X42","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"0          5' 3\"\n1          5' 3\"\n2           5'3\"\n3        5'7.75\"\n4         4'9.5\"\n          ...   \n23650    5'8.25\"\n23651       5'9\"\n23652     5'7.5\"\n23653       5'7\"\n23654       5'5\"\nName: Height, Length: 23655, dtype: object","content_type":"text/plain"}}}],"key":"RQljtJED20"}],"key":"pvLm6Qmh67"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#code to pull the specific error above\ndf[\"Height\"].describe()","key":"kjvLGpU5Cj"},{"type":"output","id":"OwoebABuPNJbdnyf0S32-","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/plain":{"content":"count     22325\nunique      533\ntop        5'4\"\nfreq       1134\nName: Height, dtype: object","content_type":"text/plain"}}}],"key":"w5f0cHMjXm"}],"key":"mTYH41q8ka"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":5,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Below is a key function that coverts bad height format and feet + inches into a standardized inches format. Bad ones will be given a ‘NaN’","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AU131aqh7K"}],"identifier":"below-is-a-key-function-that-coverts-bad-height-format-and-feet-inches-into-a-standardized-inches-format-bad-ones-will-be-given-a-nan","label":"Below is a key function that coverts bad height format and feet + inches into a standardized inches format. Bad ones will be given a ‘NaN’","html_id":"below-is-a-key-function-that-coverts-bad-height-format-and-feet-inches-into-a-standardized-inches-format-bad-ones-will-be-given-a-nan","implicit":true,"key":"GRZEsQQbK3"}],"key":"B8KS1hC3RI"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#code to split the Height into feet and inches\nimport re\n# this is a regex script which looks for a matching pattern in the input string. \n# https://docs.python.org/3/library/re.html\nr = re.compile(r\"([0-9]+)'([0-9]*\\.?[0-9]+|)\")\ndef format_height(el):\n    el_new =el.replace(\" \",\"\")\n    m = r.match(el_new)\n    if m == None:\n        return float('NaN')\n    else:\n        return int(m.group(1))*12 + (0 if not m.group(2) else float(m.group(2)))\n    \n# Some of the records have been transcribed as mixed fractions rather than decimal values. These values have to be converted to inches using different Python formula as discussed below.    \nfrom fractions import Fraction\ndef format_height_type2(el):  \n    el_new =el.replace('\"',\"\")\n    el_new =el_new.split('\\'')\n    el_new = [word for line in el_new for word in line.split()]\n    if not el_new:\n        return float('NaN')\n    else:\n        return int(el_new[0])*12 + (float(el_new[1]) + float(Fraction(el_new[2])))    \n# Below command starts with the beginning indentation indicating a new set of commands outside of the function, even if its in the same cell block like shown here.\n# The 'apply' function applies the function definted above to the data frame's each records' Prior Status field avlue. \ndf[\"Height_Inches\"] = df[\"Height\"].astype(str).apply(lambda x: format_height_type2(x) if x.find('/') != -1 else format_height(x))","key":"JpA3dSQz8Y"},{"type":"output","id":"0Nqk7mwH-F-nUub0OeaYK","data":[],"key":"o39IkplTrb"}],"key":"mRZQWrvTrz"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# show descriptive statistics\ndf[\"Height_Inches\"].describe()","key":"ayMB2VUzqV"},{"type":"output","id":"W9qITrP4EIedmUalGQU72","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"count    22320.00000\nmean        64.36112\nstd          4.13348\nmin         21.50000\n25%         62.00000\n50%         64.50000\n75%         67.00000\nmax        145.00000\nName: Height_Inches, dtype: float64","content_type":"text/plain"}}}],"key":"F4teYcvXAi"}],"key":"moMXQjbeXC"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# show distinct height values\ndf[\"Height_Inches\"].unique()","key":"oamV0KZm50"},{"type":"output","id":"J7Agh9q-P_YQu0VptSbMQ","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"array([ 63.        ,  67.75      ,  57.5       ,  61.5       ,\n        66.5       ,  61.        ,  66.25      ,  66.        ,\n                nan,  70.        ,  62.        ,  63.25      ,\n        63.75      ,  64.5       ,  65.25      ,  65.75      ,\n        67.5       ,  67.        ,  68.        ,  68.5       ,\n        60.        ,  69.        ,  73.        ,  63.5       ,\n        61.25      ,  64.        ,  65.        ,  71.        ,\n        65.5       ,  64.75      ,  59.        ,  62.25      ,\n        62.75      ,  69.25      ,  58.        ,  59.25      ,\n        70.5       ,  62.5       ,  60.5       ,  64.25      ,\n        59.5       ,  61.75      ,  72.        ,  69.75      ,\n        59.75      ,  60.75      ,  60.125     ,  61.24      ,\n        67.125     ,  66.75      ,  67.25      ,  69.5       ,\n        68.75      ,  60.25      ,  61.375     ,  57.        ,\n        71.25      ,  56.        ,  58.25      ,  57.75      ,\n        68.25      ,  71.5       ,  66.6       ,  64.125     ,\n        64.625     ,  71.75      ,  65.875     ,  72.5       ,\n        70.75      ,  72.25      ,  56.5       ,  56.75      ,\n        57.25      ,  72.75      ,  73.25      ,  73.75      ,\n        72.375     ,  73.875     ,  24.        ,  50.        ,\n        52.        ,  60.24      ,  66.625     ,  58.75      ,\n        68.125     ,  47.75      ,  47.        ,  58.125     ,\n        58.5       ,  59.125     ,  60.3       ,  70.25      ,\n        73.5       ,  74.        ,  75.        ,  61.625     ,\n        61.2       ,  62.125     ,  55.75      ,  48.75      ,\n        64.875     ,  54.5       ,  48.        ,  46.5       ,\n        61.1       ,  54.25      ,  66.125     ,  53.        ,\n        54.        ,  55.        ,  48.5       ,  51.        ,\n        55.25      ,  55.5       ,  60.05      ,  44.125     ,\n        40.        ,  45.        ,  50.5       ,  51.75      ,\n        92.75      ,  62.3       ,  42.        ,  69.625     ,\n        60.625     ,  65.125     ,  63.125     ,  75.25      ,\n        81.4       ,  62.15      ,  63.625     ,  49.        ,\n        51.5       ,  68.27272727, 145.        ,  76.        ,\n        69.125     ,  68.875     ,  36.        ,  41.5       ,\n        66.4       ,  53.5       ,  53.75      ,  27.        ,\n        39.25      ,  64.73      ,  65.34      ,  58.625     ,\n        64.2       ,  61.125     ,  75.5       ,  66.875     ,\n        46.        ,  69.875     ,  74.25      ,  63.875     ,\n        64.74      ,  52.5       ,  52.25      ,  53.25      ,\n        54.75      ,  56.25      ,  57.625     ,  60.875     ,\n        65.625     ,  71.625     ,  62.375     ,  62.625     ,\n        33.5       ,  38.        ,  39.5       ,  44.5       ,\n        59.05      ,  66.375     ,  47.25      ,  59.625     ,\n        60.275     ,  60.375     ,  61.875     ,  74.5       ,\n        49.25      ,  77.        ,  30.5       ,  40.75      ,\n        31.        ,  62.675     ,  75.75      ,  68.33      ,\n        59.875     ,  68.625     ,  67.875     , 108.75      ,\n        66.2       ,  63.2       ,  69.2       ,  69.4       ,\n        78.5       ,  78.        ,  62.2       ,  35.        ,\n        41.        ,  43.        ,  44.        ,  26.        ,\n        67.675     ,  60.66      ,  21.5       ,  45.5       ,\n        49.75      ,  65.3       ,  37.5       ,  65.2       ,\n        72.05      ,  72.125     ,  70.125     ,  65.375     ,\n        63.375     ,  63.74      ,  34.5       ,  39.        ,\n        34.        ,  47.5       ,  33.        ,  36.5       ,\n        26.75      ,  32.        ,  28.5       ,  30.        ,\n        29.        ,  42.5       ,  37.        ,  29.5       ,\n        49.5       ,  40.5       ,  32.5       ,  31.5       ,\n        48.92      ,  38.5       ])","content_type":"text/plain"}}}],"key":"BmkgJjQpFM"}],"key":"u30dCBRVr1"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"A study by (Margo & Steckel, 1982), which performed an analysis of the height vs age from the EnSlaved Mainfest data of around 50000+ enslaved people shipped between 1811 and 1861 to ports like Baltimore, Richmond and other cities from the Port of Savannah. According to this study, the average heights of tallest enslaved people was around 67 inches. In the same study where another set of Enslaved People’s appraisal records showed the maximum height was found to be around 72 inches. Found below are the images from this study showing the different heights by age.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UrXm1uVwic"}],"key":"mevYKWtnsi"},{"type":"image","url":"/Height_Enslaved_Mani-860437ee102343beea087fc1aeec5e74.png","alt":"Height_by_age","title":"Height_Enslaved_Manifests","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"W6shAhL1ef","urlSource":"Pics/Height_Enslaved_Manifests.png"},{"type":"image","url":"/Height_Mississippi_c-477159fe92ff8281c6f02dff7c5076c8.PNG","alt":"Max_Height_by_Weight","title":"Height_Mississippi_Chart","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"bncL9C0Rhu","urlSource":"Pics/Height_Mississippi_chart.PNG"}],"key":"aO1Y46ykeo"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The above charts raise doubts on the unique values we observed to be higher than 80 inches and lesser than 5 inches. Thus, separating these records from the dataframe below shows the different representation of the Height during transcription.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RHIIFl2fhm"}],"key":"chMSaWjnNX"}],"key":"zUGcr4q1nn"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# code to show bad records\ndf.loc[(df[\"Height_Inches\"]>80)|(df[\"Height_Inches\"]<5),['DataItem','Height','Height_Inches']]","key":"CBCYOowLrO"},{"type":"output","id":"JdZlovjFcy0scl7lyN6VA","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DataItem</th>\n      <th>Height</th>\n      <th>Height_Inches</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5032</th>\n      <td>5034</td>\n      <td>4' 44.75\"</td>\n      <td>92.75</td>\n    </tr>\n    <tr>\n      <th>5625</th>\n      <td>5627</td>\n      <td>5'2 1.4\"</td>\n      <td>81.40</td>\n    </tr>\n    <tr>\n      <th>6197</th>\n      <td>6199</td>\n      <td>5'85.\"</td>\n      <td>145.00</td>\n    </tr>\n    <tr>\n      <th>15694</th>\n      <td>15696</td>\n      <td>9'.75\"</td>\n      <td>108.75</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"       DataItem     Height  Height_Inches\n5032       5034  4' 44.75\"          92.75\n5625       5627   5'2 1.4\"          81.40\n6197       6199     5'85.\"         145.00\n15694     15696     9'.75\"         108.75","content_type":"text/plain"}}}],"key":"R6ynyb4S1i"}],"key":"o1pIt4kOMK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The above values have to be manually handled by looking into the scanned documents and finding their right values as discussed below:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xXE03tXcfF"}],"key":"LDzraKWmK0"}],"key":"w9m3Mk0LxU"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"One of entries shown above where the height was mentioned as 4 feet 44.75 inches belonged to the enslaved person Milly Farmer c477-2, page 200, upon looking at the scanned document it was really captured as 4 feet 11.75 inches as found below from the document:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"deQ2TgcOXy"}],"key":"MWnX4x1CH5"},{"type":"image","url":"/CoF_Data_Preparation-4803cc3f32e7dce58471e5e746002837.PNG","alt":"HeightIssue4","title":"CoF Height Error4","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AEoiAfULo2","urlSource":"Pics/CoF_Data_Preparation_Height_Incorrect4.PNG"}],"key":"hvlFkg5aG9"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Also, it should be noted that there is record which was entered with a height of 9’.75\" which clearly seems like an impossible value. This had to be handled by attempting to manually look at the Certificate of Freedom record from the scanned documents. Upon analyzing we found that there was no CoF scanned document found for this person (Cof ID: 15696). It mentions that under note that this person was manumitted but we could not find the documents under Manumitted records as well. Hence, the height record was changed as NaN for this record.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gx69zZXXJf"}],"key":"O4XHSkEdQi"}],"key":"pvr4lNxWMW"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Code to show bad records \ndf.loc[(df[\"Height_Inches\"].isna())&(df[\"Height\"].notna()),[\"DataItem\",\"Height\"]]","key":"wd0JyPRhYS"},{"type":"output","id":"42gKDFf7VdKP-6Kpo5rFV","data":[{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DataItem</th>\n      <th>Height</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>7859</th>\n      <td>7861</td>\n      <td>5 5\"</td>\n    </tr>\n    <tr>\n      <th>11492</th>\n      <td>11494</td>\n      <td>illegible</td>\n    </tr>\n    <tr>\n      <th>12837</th>\n      <td>12839</td>\n      <td>5\"</td>\n    </tr>\n    <tr>\n      <th>15175</th>\n      <td>15177</td>\n      <td>5\"</td>\n    </tr>\n    <tr>\n      <th>16964</th>\n      <td>16966</td>\n      <td>5\"1\"</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"       DataItem     Height\n7859       7861       5 5\"\n11492     11494  illegible\n12837     12839         5\"\n15175     15177         5\"\n16964     16966       5\"1\"","content_type":"text/plain"}}}],"key":"qAfQqY3tqE"}],"key":"f13rQj3gPN"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Other data capture issues were corrected by looking at the original scanned CoF as shown below: the height was noted as 5 5” which was in fact 5” 5’ - 5 feet 5 inches\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MB0qXt8GWq"},{"type":"image","url":"/CoF_Data_Preparation-cbeb7448e18ac945ab78c321fcdc8464.PNG","alt":"HeightIssue2","title":"CoF Height Error2","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Zc8fISBkkK","urlSource":"Pics/CoF_Data_Preparation_Height_Incorrect2.PNG"}],"key":"tWMQUAan3t"}],"key":"BJASLCbMVT"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"From above code result, we identify that there are some invalid representations of the height where the transcribers did not follow the procedures to enter single quotes for Feet and double quotes for inches. These have to be manually handled as well.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OJH58dBRnj"}],"key":"OEMYzadWlW"}],"key":"XZuGVUFgwU"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#code to manually update the issues identified above with the corrected value in inches\n# We directly use the dataitem id as shown above to update the records.\ndf[\"Height_Inches\"]\ndf.loc[(df[\"DataItem\"]==5034), \"Height_Inches\"] =59.75\ndf.loc[(df[\"DataItem\"]==5627), \"Height_Inches\"] =63.40\ndf.loc[(df[\"DataItem\"]==6199), \"Height_Inches\"] =None\ndf.loc[(df[\"DataItem\"]==15696), \"Height_Inches\"] =None\ndf.loc[(df[\"DataItem\"]==7861), \"Height_Inches\"] =65.00\ndf.loc[(df[\"DataItem\"]==11494), \"Height_Inches\"] =None\ndf.loc[(df[\"DataItem\"]==12839), \"Height_Inches\"] =60.00\ndf.loc[(df[\"DataItem\"]==15177), \"Height_Inches\"] =60.00\ndf.loc[(df[\"DataItem\"]==16966), \"Height_Inches\"] =61.00","key":"VQWfSDYTDS"},{"type":"output","id":"EMgBPetrPsfDEQmOjGrlb","data":[],"key":"XisAqhUlVR"}],"key":"sQ9usO1i29"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# show height values that are outliers and invalid values\ndf.loc[(df[\"Height_Inches\"]>80)|(df[\"Height_Inches\"]<5),['DataItem','Height','Height_Inches']]\ndf.loc[(df[\"Height_Inches\"].isna())&(df[\"Height\"].notna()),[\"DataItem\",\"Height\",\"Height_Inches\"]]","key":"H29sFp2IUp"},{"type":"output","id":"FDC1f56CHYY8qp-rP-Zi8","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DataItem</th>\n      <th>Height</th>\n      <th>Height_Inches</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>6197</th>\n      <td>6199</td>\n      <td>5'85.\"</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>11492</th>\n      <td>11494</td>\n      <td>illegible</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>15694</th>\n      <td>15696</td>\n      <td>9'.75\"</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"       DataItem     Height  Height_Inches\n6197       6199     5'85.\"            NaN\n11492     11494  illegible            NaN\n15694     15696     9'.75\"            NaN","content_type":"text/plain"}}}],"key":"GTnU5jp0dt"}],"key":"wzyAYK42FU"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As could be seen, wherever possible, the team went through the scanned documents for the erroneous entries and updated the conversions ourselves. For these erroneous data, MSA would be contacted to fix the Source of Record.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gus051u8qz"}],"key":"XovBXpapHp"}],"key":"uODtz1Ia4T"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Age feature","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GPc5DaykT3"}],"identifier":"age-feature","label":"Age feature","html_id":"age-feature","implicit":true,"key":"CzJbc9FOx3"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Age field was originally in the text type format, converted to number, and converted all the decimals which was entered as it is from the original document listed as months into a 12 month per year relative decimal value, for example, the original CoF noted the enslaved person as 18 months old, the dataset had this value as 0.18 under the age column which actually should be 1.5 years old.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"hIQabSRAvV"}],"key":"VPn5js0ia4"}],"key":"GwfLXdqPpU"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Below is a key function that converts bad decimal values transcrbed into a good decimal fraction of a year. For example, 0.18 was transcribed for 18 months, this was converted to 1.5 years.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uEw2ndqtnH"}],"identifier":"below-is-a-key-function-that-converts-bad-decimal-values-transcrbed-into-a-good-decimal-fraction-of-a-year-for-example-0-18-was-transcribed-for-18-months-this-was-converted-to-1-5-years","label":"Below is a key function that converts bad decimal values transcrbed into a good decimal fraction of a year. For example, 0.18 was transcribed for 18 months, this was converted to 1.5 years.","html_id":"below-is-a-key-function-that-converts-bad-decimal-values-transcrbed-into-a-good-decimal-fraction-of-a-year-for-example-0-18-was-transcribed-for-18-months-this-was-converted-to-1-5-years","implicit":true,"key":"flFn2bsDdJ"}],"key":"XJVHI2QAfN"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# code to pull the above \nimport math\nfrom fractions import Fraction\ndef format_fraction_age(x):  \n    fractional, whole = math.modf(x)\n    # Some of the records have been transcribed as bad fractions, this will fix it as a good fraction of a year\n    return float(fractional*100/12)   \n# The 'apply' function applies the function definted above to the data frame's each records' Age field value. \ndf[\"AgeFormatted\"] = df[\"Age\"].apply(lambda x: float(x) if x >= 1 else format_fraction_age(x))\n# import shlex","key":"L3nbq2t92m"},{"type":"output","id":"mWpxWLqvDClOewQFoMh5x","data":[],"key":"nvCnze4WmF"}],"key":"QxekXkHx2I"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# code to find the converted Age records\ndf.loc[(df[\"Age\"]<1),['DataItem','Age','AgeFormatted']]","key":"ECmk86zsmH"},{"type":"output","id":"n68f1w0GKwtGEdFtiEiTM","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DataItem</th>\n      <th>Age</th>\n      <th>AgeFormatted</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>11876</th>\n      <td>11878</td>\n      <td>0.08</td>\n      <td>0.666667</td>\n    </tr>\n    <tr>\n      <th>13870</th>\n      <td>13872</td>\n      <td>0.18</td>\n      <td>1.500000</td>\n    </tr>\n    <tr>\n      <th>19625</th>\n      <td>19627</td>\n      <td>0.80</td>\n      <td>6.666667</td>\n    </tr>\n    <tr>\n      <th>22819</th>\n      <td>22822</td>\n      <td>0.09</td>\n      <td>0.750000</td>\n    </tr>\n    <tr>\n      <th>22849</th>\n      <td>22852</td>\n      <td>0.18</td>\n      <td>1.500000</td>\n    </tr>\n    <tr>\n      <th>22861</th>\n      <td>22864</td>\n      <td>0.03</td>\n      <td>0.250000</td>\n    </tr>\n    <tr>\n      <th>22890</th>\n      <td>22893</td>\n      <td>0.08</td>\n      <td>0.666667</td>\n    </tr>\n    <tr>\n      <th>22907</th>\n      <td>22910</td>\n      <td>0.03</td>\n      <td>0.250000</td>\n    </tr>\n    <tr>\n      <th>22912</th>\n      <td>22915</td>\n      <td>0.18</td>\n      <td>1.500000</td>\n    </tr>\n    <tr>\n      <th>22940</th>\n      <td>22943</td>\n      <td>0.06</td>\n      <td>0.500000</td>\n    </tr>\n    <tr>\n      <th>22969</th>\n      <td>22972</td>\n      <td>0.07</td>\n      <td>0.583333</td>\n    </tr>\n    <tr>\n      <th>22979</th>\n      <td>22982</td>\n      <td>0.06</td>\n      <td>0.500000</td>\n    </tr>\n    <tr>\n      <th>23038</th>\n      <td>23041</td>\n      <td>0.05</td>\n      <td>0.416667</td>\n    </tr>\n    <tr>\n      <th>23059</th>\n      <td>23062</td>\n      <td>0.18</td>\n      <td>1.500000</td>\n    </tr>\n    <tr>\n      <th>23118</th>\n      <td>23121</td>\n      <td>0.03</td>\n      <td>0.250000</td>\n    </tr>\n    <tr>\n      <th>23126</th>\n      <td>23129</td>\n      <td>0.07</td>\n      <td>0.583333</td>\n    </tr>\n    <tr>\n      <th>23154</th>\n      <td>23157</td>\n      <td>0.06</td>\n      <td>0.500000</td>\n    </tr>\n    <tr>\n      <th>23171</th>\n      <td>23174</td>\n      <td>0.04</td>\n      <td>0.333333</td>\n    </tr>\n    <tr>\n      <th>23269</th>\n      <td>23272</td>\n      <td>0.06</td>\n      <td>0.500000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"       DataItem   Age  AgeFormatted\n11876     11878  0.08      0.666667\n13870     13872  0.18      1.500000\n19625     19627  0.80      6.666667\n22819     22822  0.09      0.750000\n22849     22852  0.18      1.500000\n22861     22864  0.03      0.250000\n22890     22893  0.08      0.666667\n22907     22910  0.03      0.250000\n22912     22915  0.18      1.500000\n22940     22943  0.06      0.500000\n22969     22972  0.07      0.583333\n22979     22982  0.06      0.500000\n23038     23041  0.05      0.416667\n23059     23062  0.18      1.500000\n23118     23121  0.03      0.250000\n23126     23129  0.07      0.583333\n23154     23157  0.06      0.500000\n23171     23174  0.04      0.333333\n23269     23272  0.06      0.500000","content_type":"text/plain"}}}],"key":"rT7vLN04B6"}],"key":"d5ePYDiDwW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For one case which was listed to be as 100 years old, upon checking the CoF original document, it’s unclear as the document shows something like eighty & twenty years as highlighted below: This is also noted in the notes section as “Age given as eighty and twenty years. Could potentially be 28 years, not 100.”","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"k2DKlpQzT2"}],"key":"yHtWdMTIJA"},{"type":"image","url":"/CoF_Data_Preparation-7879b4c23a194275ea16682d2dcae3d1.PNG","alt":"AgeIssue","title":"CoF Age Error","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"olSMSCznhW","urlSource":"Pics/CoF_Data_Preparation_Age_Incorrect.PNG"}],"key":"M1VURfB7zE"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# save the output file\n# save the output to the csv\ndfo = pd.DataFrame(df)\ndfo.to_csv('https://raw.githubusercontent.com/cases-umd/Legacy-of-Slavery/refs/heads/master/Datasets/LoS_Clean_Output_Mod2.csv', index=False)","key":"t1FQFSfxXa"},{"type":"output","id":"uBRamw0XS7qqC14uECtTL","data":[],"key":"iB5mzrZuaH"}],"key":"Nz2rSdb27M"}],"key":"ygUIteJgQm"},"references":{"cite":{"order":[],"data":{}}}}